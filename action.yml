name: conda-verify
description: Install and import a conda package with micromamba
author: glass-ships
branding:
  icon: package
  color: yellow

inputs:
  local-channel:
    description: |
      Local conda channel (path to directory containing .conda file)
      For example, if the .conda artifact is downloaded to `/tmp/local-channel/linux-64`,
      this should be set to `/tmp/local-channel`
    required: false
  package-name:
    description: Name of the package to install and verify
    required: true
  python-version:
    description: Python version to use when setting up micromamba
    required: false
    default: 3.11
  extra-channels:
    description: |
      Additional channels to use when installing the package
      Note, conda-forge is included by default
      Example: 
        channels: mantid neutrons
    required: false
  extra-commands:
    description: Additional bash commands to be run during the verification step.
    required: false
    # default: ""

runs:
  using: "composite"
  steps:
    - name: Setup micromamba
      uses: mamba-org/setup-micromamba@v2
      with:
        environment-name: test
        init-shell: bash
        create-args: >-
          python=${{ inputs.python-version }}

    - name: Install the package
      shell: bash -el {0}
      env:
        LOCAL_CHANNEL: ${{ inputs.local-channel }}
        EXTRA_CHANNELS: ${{ inputs.extra-channels }}
        PKG_NAME: ${{ inputs.package-name }}
      run: |
        micromamba install --yes -c conda-forge conda-build conda-index
        channels="conda-forge"
        if [ -n "${LOCAL_CHANNEL}" ]; then
            python -m conda_index ${LOCAL_CHANNEL}
            channels="${LOCAL_CHANNEL} $channels"
        fi
            
        if [ -n "${EXTRA_CHANNELS}" ]; then
            channels+=" ${EXTRA_CHANNELS}"
        fi

        channels="-c ${channels// / -c }"
        micromamba install --yes ${channels} ${PKG_NAME}

    - name: Verify the installation
      shell: bash -el {0}
      env:
        PKG_NAME: ${{ inputs.package-name }}
        EXTRA_COMMANDS: ${{ inputs.extra-commands }}
      run: |
        conda_version=$(micromamba list "${PKG_NAME}" | awk -v pkg="${PKG_NAME}" '$1 == pkg { print $2 }')
        echo "------------------------"
        echo "Conda version: $conda_version"
        python_version=$(python -c "import ${PKG_NAME}; print(${PKG_NAME}.__version__)")
        echo "Python version: $python_version"
        if [ "$conda_version" != "$python_version" ]; then
          echo -e "\nVersion mismatch!\m"
          exit 1
        else
          echo "Versions match."
        fi
        echo "------------------------"

        if [ -n "${EXTRA_COMMANDS}" ]; then
          echo "Running additional commands:"
          readarray -t commands <<< "${EXTRA_COMMANDS}"
          for cmd in "${commands[@]}"; do
            eval "${cmd}"
          done
        fi
